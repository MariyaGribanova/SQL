1. ПОСМОТРЕТЬ КАКИЕ ДБ ВООБЩЕ СУЩЕСТВУЮТ:
    • Запрос: SHOW databases;
    • Ответ:
    +--------------------+
    | Database           |
    +--------------------+
    | information_schema |
    | mysql              |
    | performance_schema |
    | sys                |
    +--------------------+

2. СОЗДАТЬ БД:
    • Запрос: mysql> CREATE database students;
    • Ответ:
    Query OK, 1 row affected (0.00 sec)
    • 2.1. Проверить, изменения в списке БД:
    mysql> SHOW databases;
    +--------------------+
    | Database           |
    +--------------------+
    | information_schema |
    | mysql              |
    | performance_schema |
    | students           |
    | sys                |
    +--------------------+

3. ОБОЗНАЧИТЬ, ЧТО МЫ БУДЕМ ИСПОЛЬЗОВАТЬ КОНКРЕТНУЮ БД:
    • Запрос: mysql> USE students;
    • Ответ: Database changed

4. ПРОВЕРИТЬ НАЛИЧИЕ ДАННЫХ ВНУТРИ ТАБЛИЦЫ:
    • Запрос: mysql> SHOW tables;
    • Ответ: Empty set (0.01 sec)

5. СОЗДАТЬ ТАБЛИЦУ:
  • Запрос: mysql> CREATE table courses (id INT(11) NOT NULL PRIMARY KEY, faculty VARCHAR(55) NULL, number INT(2) NULL);
      Где:
        - CREATE - команда для создания;
        - table - уточнение что именно нужно создать (таблицу);
        - courses - название таблицы;
        - в скобках () пишется наименование столбцов и тот тип полей, который будет применяться к этому полю:
           1) первая строка:
             - id - название строки;
             - INT - указываем тип данных, сейчас это INT, т.е. целое число;
             - (11) - после типа в скобках пишется количество чисел, которое может помещаться внутрь;
             - NOT NULL - обозначение, что строка всегда должна быть заполнена;
             - PRIMARY KEY - указание для системы СУБД, что это первичный ключ;
             - , - запятая означает, что в первой строке перечислены все необхоимые данные;
           2) вторая строка:
             - faculty - название строки;
             - VARCHAR - тип данных - строковые данные;
             - (55) - строка содержит 55 симоволов максимум;
             - NULL - строка может быть пустой;
             - , - запятая означает, что в первой строке перечислены все необхоимые данные;
           3) третья строка:
            - number - название строки;
            - INT - указываем тип данных, сейчас это INT, т.е. целое число;
            - NULL - строка может быть пустой.
  • Ответ: Query OK, 0 rows affected, 2 warnings (0.01 sec)

6. ПОСОМТРЕТЬ КАКИЕ ЗНАЧЕНИЯ ЕСТЬ В СОЗДАННОЙ ТАБЛИЦЕ:
    • Запрос: mysql> SELECT * FROM courses;
    • Ответ:
    +---------+-------------+------+-----+---------+-------+
    | Field   | Type        | Null | Key | Default | Extra |
    +---------+-------------+------+-----+---------+-------+
    | id      | int         | NO   | PRI | NULL    |       |
    | faculty | varchar(55) | YES  |     | NULL    |       |
    | number  | int         | YES  |     | NULL    |       |
    +---------+-------------+------+-----+---------+-------+

7. СОЗДАНИЕ ДАННЫХ В ТАБЛИЦЕ:
  • Запрос: mysql> INSERT INTO courses VALUES (1, "bio", 1);
    Где:
      - INSERT INTO - команда добавления;
      - courses - название таблицы;
      - VALUES - значения;
      - в скобках () через запятую прописываются значения, здесь обязательно необходимо обратить внимание на порядок полей в таблице (именно в таком порядке 
        они пишутся в скобках: id, faculty, number.
  • Ответ: Query OK, 1 row affected (0.00 sec)
  • 7.1. СОЗДАТЬ НЕСКОЛЬКО АНАЛОГИЧНЫХ ЗАПРОСОВ, ЧТОБЫ ЗАПОЛНИТЬ ТАБЛИЦУ ДАННЫМИ:
      - mysql> INSERT INTO courses VALUES (2, "chem",2);
      - mysql> INSERT INTO courses VALUES (3, "math", 3);
      - mysql> INSERT INTO courses VALUES (4, "geo", 4);
      - mysql> INSERT INTO courses VALUES (5, "gum", 5);
  
8. ПОСМОТРЕТЬ ТАБЛИЦУ И ВЫВЕСТИ ЗНАЧЕНИЯ, КОТОРЫЕ ТАМ СОДЕРЖАТСЯ:
    • Запрос: mysql> select * from courses;
    • Ответ:
    +----+---------+--------+
    | id | faculty | number |
    +----+---------+--------+
    |  1 | bio     |      1 |
    |  2 | chem    |      2 |
    |  3 | math    |      3 |
    |  4 | geo     |      4 |
    |  5 | gum     |      5 |
    +----+---------+--------+
    5 rows in set (0.00 sec)

9. УДАЛЕНИЕ ОПРЕДЕЛЁННЫХ ЗНАЧЕНИЙ ИЗ ТАБЛИЦЫ:
    • Запрос: mysql> DELETE FROM courses;
    !!! Такой запрос удалит ВСЕ значения из таблицы (а нам это не надо). И вообще надо внимательнее смотреть на команды DELETE и DROP, т.к. можно случайно 
        удалить БД.
    • Запрос (более конкретезированный): mysql> DELETE FROM courses WHERE faculty = "gum";
      Где:
        - DELETE FROM - команда "удалить из";
        - courses - название таблицы;
        - WHERE faculty - спецификация из какой части таблицы надо удалить данные (в данном случае, это столбец faculty);
        - "gum" - указываем конкретное значение для удаления.
    • ПОСМОТРЕТЬ ТАБЛИЦУ И ВЫВЕСТИ ЗНАЧЕНИЯ, КОТОРЫЕ ТАМ СОДЕРЖАТСЯ:    
        mysql> select * from courses;
        +----+---------+--------+
        | id | faculty | number |
        +----+---------+--------+
        |  1 | bio     |      1 |
        |  2 | chem    |      2 |
        |  3 | math    |      3 |
        |  4 | geo     |      4 |
        +----+---------+--------+
        4 rows in set (0.00 sec)

10. ИЗМЕНЕНИЕ УЖЕ СУЩЕСТВУЮЩЕГО ЗНАЧЕНИЯ:
    • Запрос: mysql> UPDATE courses SET faculty = "gum" WHERE faculty = "geo";
      Где:
        - UPDATE - обновить;
        - courses - название таблицы;
        - SET faculty = "gum" - указываем ГДЕ ОБНОВИТЬ: конкретную область таблицы и строку (в данном случае, это столбец faculty строку "gum");
        - WHERE faculty - указываем НА ЧТО ОБНОВИТЬ: конкретную область таблицы и строку (в данном случае, это столбец faculty строку "geo");
    • Ответ: Query OK, 1 row affected (0.00 sec)
      Rows matched: 1  Changed: 1  Warnings: 0
    • ПОСМОТРЕТЬ ТАБЛИЦУ И ВЫВЕСТИ ЗНАЧЕНИЯ, КОТОРЫЕ ТАМ СОДЕРЖАТСЯ:
      mysql> select * from courses;
      +----+---------+--------+
      | id | faculty | number |
      +----+---------+--------+
      |  1 | bio     |      1 |
      |  2 | chem    |      2 |
      |  3 | math    |      3 |
      |  4 | gum     |      4 |
      +----+---------+--------+
      4 rows in set (0.00 sec)

11. УДАЛЕНИЕ СТОЛБЦА В ТАБЛИЦЕ:
    • Запрос: mysql> ALTER TABLE courses DROP COLUMN id;
    • Ответ:
      Query OK, 4 rows affected (0.02 sec)
      Records: 4  Duplicates: 0  Warnings: 0
    • ПОСМОТРЕТЬ ТАБЛИЦУ И ВЫВЕСТИ ЗНАЧЕНИЯ, КОТОРЫЕ ТАМ СОДЕРЖАТСЯ:
      mysql> select * from courses;
      +---------+--------+
      | faculty | number |
      +---------+--------+
      | bio     |      1 |
      | chem    |      2 |
      | math    |      3 |
      | gum     |      4 |
      +---------+--------+
      4 rows in set (0.00 sec)

12. ДОБАВЛЕНИЕ НОВОГО СТОЛБЦА В ТАБЛИЦУ:
    • Запрос: mysql> ALTER TABLE courses ADD COLUMN id INT AFTER number;
    • Ответ: Query OK, 0 rows affected (0.01 sec)
             Records: 0  Duplicates: 0  Warnings: 0
    • ПОСМОТРЕТЬ ТАБЛИЦУ И ВЫВЕСТИ ЗНАЧЕНИЯ, КОТОРЫЕ ТАМ СОДЕРЖАТСЯ:
      mysql> select * from courses;
      +---------+--------+------+
      | faculty | number | id   |
      +---------+--------+------+
      | bio     |      1 | NULL |
      | chem    |      2 | NULL |
      | math    |      3 | NULL |
      | gum     |      4 | NULL |
      +---------+--------+------+
      4 rows in set (0.00 sec)
